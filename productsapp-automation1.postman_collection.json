{
	"info": {
		"_postman_id": "170b3363-c94a-4267-b6c2-15f8085fadee",
		"name": "productsapp-automation1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc65a3a4-36c5-4448-bab9-2d04acd9f769",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"//JSON Structure Tests\r",
							"pm.test(\"Response to have an Id\", function(){\r",
							"    pm.response.to.have.jsonBody(\"[0].Id\")})\r",
							"\r",
							"pm.test(\"Response to have an Name\", function(){\r",
							"    pm.response.to.have.jsonBody(\"[0].Name\")})\r",
							"\r",
							"pm.test(\"Response to have an Category\", function(){\r",
							"    pm.response.to.have.jsonBody(\"[0].Category\")})\r",
							"\r",
							"pm.test(\"Response to have an Price\", function(){\r",
							"    pm.response.to.have.jsonBody(\"[0].Price\")})\r",
							"\r",
							"//JSON Content Tests\r",
							"    //Product ID 1\r",
							"pm.test(\"Value of [0].Id to be 1\", function(){\r",
							"    pm.expect(1).to.equal(jsonData[0].Id)});\r",
							"\r",
							"pm.test(\"Value of [0].Name to be Cold War\", function(){\r",
							"    pm.expect(\"Cold War\").to.equal(jsonData[0].Name)});\r",
							"\r",
							"pm.test(\"Value of [0].Category to be Video Games\", function(){\r",
							"    pm.expect(\"Video Games\").to.equal(jsonData[0].Category)});\r",
							"\r",
							"pm.test(\"Value of [0].Price to be 60.00\", function(){\r",
							"    pm.expect(60.00).to.equal(jsonData[0].Price)});\r",
							"\r",
							"    //Product ID 2\r",
							"pm.test(\"Value of [1].Id to be 2\", function(){\r",
							"    pm.expect(2).to.equal(jsonData[1].Id)});\r",
							"\r",
							"pm.test(\"Value of [1].Name to be Pecan Turtles\", function(){\r",
							"    pm.expect(\"Pecan Turtles\").to.equal(jsonData[1].Name)});\r",
							"\r",
							"pm.test(\"Value of [1].Category to be Candy\", function(){\r",
							"    pm.expect(\"Candy\").to.equal(jsonData[1].Category)});\r",
							"\r",
							"pm.test(\"Value of [1].Price to be 2.75\", function(){\r",
							"    pm.expect(2.75).to.equal(jsonData[1].Price)});\r",
							"\r",
							"    //Product ID 3\r",
							"pm.test(\"Value of [2].Id to be 3\", function(){\r",
							"    pm.expect(3).to.equal(jsonData[2].Id)});\r",
							"\r",
							"pm.test(\"Value of [2].Name to be Pants\", function(){\r",
							"    pm.expect(\"Pants\").to.equal(jsonData[2].Name)});\r",
							"\r",
							"pm.test(\"Value of [2].Category to be Clothing\", function(){\r",
							"    pm.expect(\"Clothing\").to.equal(jsonData[2].Category)});\r",
							"\r",
							"pm.test(\"Value of [2].Price to be 22.99\", function(){\r",
							"    pm.expect(22.99).to.equal(jsonData[2].Price)});\r",
							"\r",
							"//General Aspect Tests\r",
							"pm.test(\"response to be 200 OK\", function(){\r",
							"    pm.response.to.have.status(200);});\r",
							"    \r",
							"pm.test(\"response time less than 1000MS\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:53111/api/products",
					"host": [
						"localhost"
					],
					"port": "53111",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "61eb4144-4430-497d-99db-6b7100727d3e",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"//JSON Structure Tests\r",
							"pm.test(\"Response to have an Id\", function(){\r",
							"    pm.response.to.have.jsonBody(\"Id\")})\r",
							"\r",
							"pm.test(\"Response to have an Name\", function(){\r",
							"    pm.response.to.have.jsonBody(\"Name\")})\r",
							"\r",
							"pm.test(\"Response to have an Category\", function(){\r",
							"    pm.response.to.have.jsonBody(\"Category\")})\r",
							"\r",
							"pm.test(\"Response to have an Price\", function(){\r",
							"    pm.response.to.have.jsonBody(\"Price\")})\r",
							"\r",
							"//JSON Content Tests\r",
							"pm.test(\"Value of Id to be 2\", function(){\r",
							"    pm.expect(2).to.equal(jsonData.Id)});\r",
							"\r",
							"pm.test(\"Value of Name to be Pecan Turtles\", function(){\r",
							"    pm.expect(\"Pecan Turtles\").to.equal(jsonData.Name)});\r",
							"\r",
							"pm.test(\"Value of Category to be Candy\", function(){\r",
							"    pm.expect(\"Candy\").to.equal(jsonData.Category)});\r",
							"\r",
							"pm.test(\"Value of Price to be 2.75\", function(){\r",
							"    pm.expect(2.75).to.equal(jsonData.Price)});\r",
							"\r",
							"//General Aspect Tests\r",
							"pm.test(\"response to be 200 OK\", function(){\r",
							"    pm.response.to.have.status(200);});\r",
							"    \r",
							"pm.test(\"response time less than 1000MS\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:53111/api/products/2",
					"host": [
						"localhost"
					],
					"port": "53111",
					"path": [
						"api",
						"products",
						"2"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}